/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ingresso.view;

import ingresso.controller.IngressoController;
import ingresso.model.Ingresso;
import ingresso.model.IngressoMeia;
import ingresso.model.IngressoNormal;
import ingresso.model.IngressoVIP;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gabri
 */
public class TelaIngressos extends javax.swing.JFrame {
    private DefaultTableModel modelo;
    private final IngressoController ingressoController = new IngressoController();

    /**
     * Creates new form TelaIngressos
     */
    public TelaIngressos() {
        initComponents();
        configurarTabela();
        atualizarTabela();
    }

    private void configurarTabela() {
        modelo = new DefaultTableModel(
            new String[] {"ID", "Evento", "Data", "Valor", "Tipo", "Taxa"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return (column != 0 && column != 2); // ID não é editável
            }
        };
        
        tabelaIngressos.setModel(modelo);
    }
    
    private void atualizarTabela() {
        modelo.setRowCount(0); // Limpa a tabela

        for (Ingresso ingresso : ingressoController.listarIngressos()) {
            Double taxaVIP = null;
            
            String tipoIngresso = "";
            if (ingresso instanceof IngressoVIP ingressoVIP) {
                taxaVIP = ingressoVIP.getTAXA_VIP();
                tipoIngresso = "VIP";
            } else if (ingresso instanceof IngressoMeia) {
                tipoIngresso = "Meia";
            } else if (ingresso instanceof IngressoNormal) {
                tipoIngresso = "Normal";
            }
            
            
            modelo.addRow(new Object[] {
                ingresso.getId(),
                ingresso.getNomeEvento(),
                ingresso.getDataEvento(),
                ingresso.getValorBase(),
                tipoIngresso,
                taxaVIP
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        TabelaClientePane = new javax.swing.JPanel();
        CadastrarClientTitle1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaIngressos = new javax.swing.JTable();
        ImprimirButton = new javax.swing.JButton();
        CadastrarClientePane = new javax.swing.JPanel();
        CadastrarClientTitle = new javax.swing.JLabel();
        Separator = new javax.swing.JSeparator();
        Inputs = new javax.swing.JPanel();
        TelefonePane = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tipoComboBox = new javax.swing.JComboBox<>();
        NomePane = new javax.swing.JPanel();
        eventoInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        EmailPane = new javax.swing.JPanel();
        dataInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CPFPane = new javax.swing.JPanel();
        valorInput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        criarClienteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        CadastrarClientTitle1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CadastrarClientTitle1.setText("Todos os ingressos");

        tabelaIngressos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Evento", "Data", "Valor", "Taxa", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaIngressos);

        ImprimirButton.setText("Imprimir");
        ImprimirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TabelaClientePaneLayout = new javax.swing.GroupLayout(TabelaClientePane);
        TabelaClientePane.setLayout(TabelaClientePaneLayout);
        TabelaClientePaneLayout.setHorizontalGroup(
            TabelaClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaClientePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(TabelaClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CadastrarClientTitle1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ImprimirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        TabelaClientePaneLayout.setVerticalGroup(
            TabelaClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaClientePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(CadastrarClientTitle1)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ImprimirButton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tabela", TabelaClientePane);

        CadastrarClientTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CadastrarClientTitle.setText("Cadastrar cliente");

        jLabel2.setText("Tipo de ingresso");

        tipoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Meia", "VIP" }));

        javax.swing.GroupLayout TelefonePaneLayout = new javax.swing.GroupLayout(TelefonePane);
        TelefonePane.setLayout(TelefonePaneLayout);
        TelefonePaneLayout.setHorizontalGroup(
            TelefonePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tipoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(TelefonePaneLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        TelefonePaneLayout.setVerticalGroup(
            TelefonePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelefonePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tipoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jLabel3.setText("Nome do evento");

        javax.swing.GroupLayout NomePaneLayout = new javax.swing.GroupLayout(NomePane);
        NomePane.setLayout(NomePaneLayout);
        NomePaneLayout.setHorizontalGroup(
            NomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NomePaneLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(NomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventoInput)
                    .addGroup(NomePaneLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 118, Short.MAX_VALUE)))
                .addContainerGap())
        );
        NomePaneLayout.setVerticalGroup(
            NomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NomePaneLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(eventoInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jLabel5.setText("Data do evento");

        javax.swing.GroupLayout EmailPaneLayout = new javax.swing.GroupLayout(EmailPane);
        EmailPane.setLayout(EmailPaneLayout);
        EmailPaneLayout.setHorizontalGroup(
            EmailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel5)
        );
        EmailPaneLayout.setVerticalGroup(
            EmailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmailPaneLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dataInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jLabel6.setText("Valor base");

        javax.swing.GroupLayout CPFPaneLayout = new javax.swing.GroupLayout(CPFPane);
        CPFPane.setLayout(CPFPaneLayout);
        CPFPaneLayout.setHorizontalGroup(
            CPFPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPFPaneLayout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(0, 159, Short.MAX_VALUE))
            .addGroup(CPFPaneLayout.createSequentialGroup()
                .addComponent(valorInput)
                .addContainerGap())
        );
        CPFPaneLayout.setVerticalGroup(
            CPFPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CPFPaneLayout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(valorInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        criarClienteBtn.setText("Cadastrar");
        criarClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarClienteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InputsLayout = new javax.swing.GroupLayout(Inputs);
        Inputs.setLayout(InputsLayout);
        InputsLayout.setHorizontalGroup(
            InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InputsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CPFPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NomePane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(criarClienteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EmailPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TelefonePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InputsLayout.setVerticalGroup(
            InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InputsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EmailPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NomePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InputsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(CPFPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InputsLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(TelefonePane, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addComponent(criarClienteBtn)
                .addContainerGap(282, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CadastrarClientePaneLayout = new javax.swing.GroupLayout(CadastrarClientePane);
        CadastrarClientePane.setLayout(CadastrarClientePaneLayout);
        CadastrarClientePaneLayout.setHorizontalGroup(
            CadastrarClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Separator)
            .addGroup(CadastrarClientePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(CadastrarClientTitle)
                .addContainerGap(569, Short.MAX_VALUE))
            .addComponent(Inputs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CadastrarClientePaneLayout.setVerticalGroup(
            CadastrarClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CadastrarClientePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(CadastrarClientTitle)
                .addGap(20, 20, 20)
                .addComponent(Separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Cadastrar", CadastrarClientePane);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 811, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void criarClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarClienteBtnActionPerformed
        String tipo = (String) tipoComboBox.getSelectedItem();
        String nomeEvento = eventoInput.getText().trim();
        String dataEvento = dataInput.getText().trim();
        String valorStr = valorInput.getText().trim();
        
        // Verificações básicas
        if (nomeEvento.isEmpty()) {
            JOptionPane.showMessageDialog(null, "O nome do evento é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (dataEvento.isEmpty()) {
            JOptionPane.showMessageDialog(null, "A data do evento é obrigatória.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double valorBase;
        try {
            valorBase = Double.parseDouble(valorStr);
            if (valorBase <= 0) {
                JOptionPane.showMessageDialog(null, "O valor base deve ser maior que zero.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Informe um valor base válido.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Pede a taxa adicional
        double taxaAdicional = 0;
        if ("VIP".equals(tipo)) {
            String taxaStr = JOptionPane.showInputDialog(null, "Informe o valor da taxa adicional:", "Taxa Adicional", JOptionPane.PLAIN_MESSAGE);

            if (taxaStr == null || taxaStr.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "A taxa adicional é obrigatória para ingressos VIP.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                taxaAdicional = Double.parseDouble(taxaStr);
                if (taxaAdicional < 0) {
                    JOptionPane.showMessageDialog(null, "A taxa adicional deve ser um valor positivo.", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                // Aqui você pode usar a taxa adicional junto com o valorBase, por exemplo:
                // valorBase += taxa;
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Informe um valor numérico válido para a taxa adicional.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        // Cria o objeto
        if ("VIP".equals(tipo) ) {
            ingressoController.cadastrarIngressoVIP(tipo, nomeEvento, dataEvento, valorBase, taxaAdicional);
        } else {
            ingressoController.cadastrarIngresso(tipo, nomeEvento, dataEvento, valorBase);
        }
        
        JOptionPane.showMessageDialog(null, "Ingresso criado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        atualizarTabela();
    }//GEN-LAST:event_criarClienteBtnActionPerformed

    private void ImprimirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirButtonActionPerformed
        int selectedRow = tabelaIngressos.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um ingresso para imprimir.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int id = (int) tabelaIngressos.getValueAt(selectedRow, 0);
            Ingresso ingressoSelecionado = ingressoController.buscarIngressoPorId(id);

            if (ingressoSelecionado != null) {
                ingressoSelecionado.imprimirIngresso();
                JOptionPane.showMessageDialog(this, "Ingresso impresso com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Ingresso não encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar imprimir o ingresso.", "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_ImprimirButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CPFPane;
    private javax.swing.JLabel CadastrarClientTitle;
    private javax.swing.JLabel CadastrarClientTitle1;
    private javax.swing.JPanel CadastrarClientePane;
    private javax.swing.JPanel EmailPane;
    private javax.swing.JButton ImprimirButton;
    private javax.swing.JPanel Inputs;
    private javax.swing.JPanel NomePane;
    private javax.swing.JSeparator Separator;
    private javax.swing.JPanel TabelaClientePane;
    private javax.swing.JPanel TelefonePane;
    private javax.swing.JButton criarClienteBtn;
    private javax.swing.JTextField dataInput;
    private javax.swing.JTextField eventoInput;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tabelaIngressos;
    private javax.swing.JComboBox<String> tipoComboBox;
    private javax.swing.JTextField valorInput;
    // End of variables declaration//GEN-END:variables
}
